unique(test$Video_name)
test %>%
ggplot(aes(x = Frame, y = major_axis_len*minor_axis_len*pi/14.85/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Area (units?)") +
labs(title = paste0(unique(Video_name),"_Arena_",i)) +
ylim(0,20) +
xlim(0,22500)
test %>%
ggplot(aes(x = Frame, y = major_axis_len*minor_axis_len*pi/14.85/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Area (units?)") +
labs(title = paste0(unique(test$Video_name),"_Arena_",i)) +
ylim(0,20) +
xlim(0,22500)
test %>%
ggplot(aes(x = Frame, y = major_axis_len*minor_axis_len*pi/14.85/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Area (units?)") +
labs(title = paste0(unique(test$Video_name),"  Arena_",i)) +
ylim(0,20) +
xlim(0,22500)
test %>%
ggplot(aes(x = Frame, y = major_axis_len*minor_axis_len*pi/14.85/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Area (units?)") +
labs(title = paste0(unique(test$Video_name),":   Arena_",i)) +
ylim(0,20) +
xlim(0,22500)
unique(alldata$Feature)
head(alldata)
test <- alldata %>%
select(-Units, -Data_Source) %>%
spread("Feature","Value") %>%
select(Video_name, Frame, Fly_Id,
major_axis_len,minor_axis_len,dist_to_other,ori,facing_angle,vel,pos_x,pos_y,axis_ratio) %>%
mutate(Fly_Id = as.factor(Fly_Id))
test
test %>%
filter(Arena == 1)
test <- alldata %>%
select(-Units, -Data_Source) %>%
spread("Feature","Value") %>%
select(Video_name, Frame, Fly_Id, Arena,
major_axis_len,minor_axis_len,dist_to_other,ori,facing_angle,vel,pos_x,pos_y,axis_ratio) %>%
mutate(Fly_Id = as.factor(Fly_Id))
test
test %>%
filter(Arena == 1) %>%
ggplot(aes(x = Frame, y = major_axis_len*minor_axis_len*pi/14.85/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Area (units?)") +
labs(title = paste0(unique(test$Video_name),":   Arena_",i)) +
ylim(0,20) +
xlim(0,22500)
test_arena_1 <-  test %>%
filter(Arena == 1)
test_arena_1 %>%
ggplot(aes(x = Frame, y = major_axis_len*minor_axis_len*pi/14.85/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Area (units?)") +
labs(title = paste0(unique(test$Video_name),":   Arena_",i)) +
ylim(0,20) +
xlim(0,22500)
test_arena_1 %>%
filter(Arena == 1) %>%
ggplot(aes(x = Frame, y = distance_to_other, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Area (units?)") +
labs(title = paste0(unique(test$Video_name),":   Arena_",i)) +
ylim(0,20) +
xlim(0,22500)
test_arena_1 %>%
filter(Arena == 1) %>%
ggplot(aes(x = Frame, y = dist_to_other, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Area (units?)") +
labs(title = paste0(unique(test$Video_name),":   Arena_",i)) +
ylim(0,20) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = dist_to_other, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Distance to Other (mm)") +
labs(title = paste0(unique(test$Video_name),":   Arena_",i)) +
ylim(0,20) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = dist_to_other, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Distance to Other (mm)") +
ylim(0,20) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = diff(ori), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Distance to Other (mm)") +
ylim(0,20) +
xlim(0,22500)
length(test_arena_1$Frame)
test_arena_1 %>%
group_by(Fly_Id) %>%
mutate(change_in_ori = diff(ori))
test_arena_1 %>%
group_by(Fly_Id) %>%
mutate(change_in_ori = c(0,diff(ori)))
test_arena_1 %>%
group_by(Fly_Id) %>%
mutate(change_in_ori = c(0,diff(ori))) %>%
ggplot(aes(x = Frame, y = change_in_ori, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Distance to Other (mm)") +
ylim(0,20) +
xlim(0,22500)
test_arena_1 %>%
group_by(Fly_Id) %>%
mutate(change_in_ori = c(0,diff(ori))) %>%
ggplot(aes(x = Frame, y = change_in_ori, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Distance to Other (mm)") +
ylim(-pi,pi) +
xlim(0,22500)
test_arena_1 %>%
group_by(Fly_Id) %>%
mutate(change_in_ori = c(0,diff(ori))) %>%
mutate(change_in_ori = if_else(abs(change_in_ori) > 5, 0, change_in_ori)) %>%
ggplot(aes(x = Frame, y = change_in_ori, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Distance to Other (mm)") +
ylim(-pi,pi) +
xlim(0,22500)
test_arena_1 %>%
group_by(Fly_Id) %>%
mutate(change_in_ori = c(0,diff(ori))) %>%
mutate(change_in_ori = if_else(abs(change_in_ori) > 5, 0, change_in_ori)) %>%
ggplot(aes(x = Frame, y = change_in_ori, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Change in Orientation (rad)") +
ylim(-pi,pi) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = facing_angle, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Facing Angle (rad)") +
ylim(0,20) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = facing_angle, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Facing Angle (rad)") +
ylim(0,pi) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = vel, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,pi) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = vel, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,4) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = smooth(vel), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,4) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = smooth(vel,twiceit = T), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,4) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = vel, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,4) +
xlim(0,22500)
library(zoo)
test_arena_1 %>%
ggplot(aes(x = Frame, y = rollmean(x = vel, k = 200, fill = c(0,0,0), align = c("center")), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,4) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = rollmean(x = vel, k = 200, fill = c(0,0,0), align = c("center")), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,40) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = rollmean(x = vel, k = 200, fill = c(0,0,0), align = c("center")), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,40) +
xlim(0,max(Frame))
test_arena_1 %>%
ggplot(aes(x = Frame, y = rollmean(x = vel, k = 200, fill = c(0,0,0), align = c("center")), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,40) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = rollmean(x = vel, k = 20, fill = c(0,0,0), align = c("center")), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,40) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = rollmean(x = vel, k = 100, fill = c(0,0,0), align = c("center")), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,40) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = rollmedian(x = vel, k = 100, fill = c(0,0,0), align = c("center")), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,40) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = rollmedian(x = vel, k = 200, fill = c(0,0,0), align = c("center")), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,40) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = rollmean(x = vel, k = 200, fill = c(0,0,0), align = c("center")), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
ylim(0,40) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = rollmean(x = vel, k = 200, fill = c(0,0,0), align = c("center")), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
#ylim(0,40) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = ori, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Angle (rad") +
ylim(0,4) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = ori, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Angle (rad") +
ylim(-pi,pi) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = ori, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Angle (rad") +
labs(title = paste0(unique(test$Video_name),":   Arena_",i)) +
ylim(-pi,pi) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = pos_x, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("X positon (px)") +
ylim(-pi,pi) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = pos_x, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("X positon (px)") +
#ylim(-pi,pi) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = pos_y, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Y positon (px)") +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = major_axis_len, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("major_axis_len (px)") +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = major_axis_len, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Major Axis Length (px)") +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = major_axis_len/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Major Axis Length (px)") +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = major_axis_len/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Major Axis Length (mm)") +
ylim(0,5) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = major_axis_len/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Major Axis Length (mm)") +
#ylim(0,5) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = minor_axis_len/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Minor Axis Length (mm)") +
#ylim(0,5) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = major_axis_len/minor_axis_len, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Axis Ratio") +
#ylim(0,5) +
xlim(0,22500)
test_arena_1 %>%
ggplot(aes(x = Frame, y = major_axis_len/minor_axis_len, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Axis Ratio") +
ylim(0,5) +
xlim(0,22500)
p_list <- list()
library(zoo)
library(cowplot)
p_list <- list()
p_list[["area"]] <- test_arena_1 %>%
ggplot(aes(x = Frame, y = major_axis_len*minor_axis_len*pi/14.85/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Area (units?)") +
labs(title = paste0(unique(test$Video_name),":   Arena_",i)) +
ylim(0,20) +
xlim(0,max(test_arena_1$Frame))
p_list[["dist_to_other"]] <- test_arena_1 %>%
ggplot(aes(x = Frame, y = dist_to_other, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Distance to Other (mm)") +
ylim(0,20) +
xlim(0,max(test_arena_1$Frame))
# Values of +/-2pi are due to the fly's angle crossing the "zero" line and
# don't represent 'true' large changes in angle. So I've reset anything
# larger than 5 to 0, making the plot more informative to find the times
# when the fly's angle changes by pi, which would be an orientation
# miss-annotation.
p_list[["change_in_ori"]] <- test_arena_1 %>%
group_by(Fly_Id) %>%
mutate(change_in_ori = c(0,diff(ori))) %>%
mutate(change_in_ori = if_else(abs(change_in_ori) > 5, 0, change_in_ori)) %>%
ggplot(aes(x = Frame, y = change_in_ori, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Change in Orientation (rad)") +
ylim(-pi,pi) +
xlim(0,max(test_arena_1$Frame))
p_list[["facing_angle"]] <- test_arena_1 %>%
ggplot(aes(x = Frame, y = facing_angle, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Facing Angle (rad)") +
ylim(0,pi) +
xlim(0,max(test_arena_1$Frame))
p_list[["vel"]] <- test_arena_1 %>%
ggplot(aes(x = Frame, y = rollmean(x = vel, k = 200, fill = c(0,0,0), align = c("center")), colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Velocity") +
#ylim(0,40) +
xlim(0,max(test_arena_1$Frame))
plot_grid(plotlist = p_list, ncol = 1)
plot_grid(plotlist = p_list, ncol = 1)
p_list <- list()
p_list[["ori"]] <- test_arena_1 %>%
ggplot(aes(x = Frame, y = ori, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Angle (rad") +
labs(title = paste0(unique(test$Video_name),":   Arena_",i)) +
ylim(-pi,pi) +
xlim(0,max(test_arena_1$Frame))
p_list[["pos_x"]] <- test_arena_1 %>%
ggplot(aes(x = Frame, y = pos_x, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("X positon (px)") +
xlim(0,max(test_arena_1$Frame))
p_list[["pos_y"]] <- test_arena_1 %>%
ggplot(aes(x = Frame, y = pos_y, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Y positon (px)") +
xlim(0,max(test_arena_1$Frame))
p_list[["major_axis_len"]] <- test_arena_1 %>%
ggplot(aes(x = Frame, y = major_axis_len/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Major Axis Length (mm)") +
#ylim(0,5) +
xlim(0,max(test_arena_1$Frame))
p_list[["minor_axis_len"]] <- test_arena_1 %>%
ggplot(aes(x = Frame, y = minor_axis_len/14.85, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Minor Axis Length (mm)") +
#ylim(0,5) +
xlim(0,max(test_arena_1$Frame))
p_list[["axis_ratio"]] <- test_arena_1 %>%
ggplot(aes(x = Frame, y = major_axis_len/minor_axis_len, colour = Fly_Id)) +
geom_line(size = 1) +
ylab("Axis Ratio") +
ylim(0,5) +
xlim(0,max(test_arena_1$Frame))
plot_grid(plotlist = p_list, ncol = 1)
source('~/Documents/GitHub/goodwin-lab-tracking/R/extract_matlab_tracking_data.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source("extract_matlab_tracking_data.R")
alldata <- extract_all_data(tracking_dir_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/",save_data = TRUE)
source('~/Documents/GitHub/goodwin-lab-tracking/R/extract_matlab_tracking_data.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/extract_matlab_tracking_data.R')
alldata <- extract_all_data(tracking_dir_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/",save_data = TRUE)
extract_all_data <- function(tracking_dir_path, save_data=FALSE) {
library(tidyverse)
library(R.matlab)
library(data.table)
if ( .Platform$OS.type == "windows" ) {
tracking_dir_path <- tracking_dir_path %>% stringr::str_replace_all(pattern = "\\\\", "/")
}
if ( !stringr::str_detect(tracking_dir_path, "/$") ) {
tracking_dir_path <- paste0(tracking_dir_path, "/")
}
vid_name <- tracking_dir_path %>% stringr::str_extract(pattern = "[^/]*/$") %>% stringr::str_remove(pattern = "/")
cat(paste0("Video name is :      ", vid_name,"\n"))
cat(paste0("    Now extracting track data\n"))
my_track_data <- extract_track_data(paste0(tracking_dir_path, vid_name, "/", vid_name, "-track.mat"))
cat(paste0("    Now extracting feat data\n"))
my_feat_data <- extract_feat_data(paste0(tracking_dir_path, vid_name, "/", vid_name, "-feat.mat"))
cat(paste0("    Now extracting jaaba data\n"))
my_jaaba_data <- extract_jaaba_data(paste0(tracking_dir_path, vid_name, "/", vid_name, "_JAABA/"))
cat(paste0("    Now merging all data\n"))
my_data <-dplyr::bind_rows(my_track_data,
dplyr::bind_rows(my_feat_data,my_jaaba_data)) %>%
dplyr::mutate(Video_name = vid_name,
Arena = dplyr::if_else((Fly_Id %% 2) == 0, Fly_Id/2, ceiling(Fly_Id/2))
) %>%
dplyr::group_by(Video_name, Fly_Id, Frame)
return(my_data)
if (save_data) {
SaveName <- paste0(tracking_dir_path, "Results/", vid_name,'_ALLDATA_2.csv')
fwrite(my_data, SaveName)
}
}
source('~/Documents/GitHub/goodwin-lab-tracking/R/extract_matlab_tracking_data.R')
alldata <- extract_all_data(tracking_dir_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/",save_data = TRUE)
alldata_plotting <- alldata %>%
select(-Units, -Data_Source) %>%
spread("Feature","Value") %>%
select(Video_name, Frame, Fly_Id, Arena,
major_axis_len,minor_axis_len,dist_to_other,ori,facing_angle,vel,pos_x,pos_y,axis_ratio) %>%
mutate(Fly_Id = as.factor(Fly_Id))
colnames(alldata_plotting)
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
diagnostic_plots(input_data_table = alldata_plotting,save_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/")
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
diagnostic_plots(input_data_table = alldata_plotting,save_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/")
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
diagnostic_plots(input_data_table = alldata_plotting,save_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/")
getwd()
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
diagnostic_plots(input_data_table = alldata_plotting,save_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/")
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
diagnostic_plots(input_data_table = alldata_plotting,save_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/")
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/extract_matlab_tracking_data.R')
paste0("~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/", "Results/", vid_name,'_ALLDATA_2.csv')
paste0("~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/", "Results/", "Annika-2020_10_08_Courtship-2020_10_08_aDN_dark",'_ALLDATA_2.csv')
source('~/Documents/GitHub/goodwin-lab-tracking/R/extract_matlab_tracking_data.R')
source("extract_matlab_tracking_data.R")
setwd("~/Documents/GitHub/goodwin-lab-tracking/bash/")
source("../R/extract_matlab_tracking_data.R")
alldata <- extract_all_data(tracking_dir_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/",save_data = TRUE)
source('~/Documents/GitHub/goodwin-lab-tracking/R/extract_matlab_tracking_data.R')
alldata_plotting <- alldata %>%
select(-Units, -Data_Source) %>%
spread("Feature","Value") %>%
select(Video_name, Frame, Fly_Id, Arena,
major_axis_len,minor_axis_len,dist_to_other,ori,facing_angle,vel,pos_x,pos_y,axis_ratio) %>%
mutate(Fly_Id = as.factor(Fly_Id))
diagnostic_plots(input_data_table = alldata_plotting,save_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/")
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
diagnostic_plots(input_data_table = alldata_plotting,save_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/")
install.packages("dtplyr")
source('~/Documents/GitHub/goodwin-lab-tracking/R/calculate_single_indices_table.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/extract_matlab_tracking_data.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
diagnostic_plots(input_data_table = alldata_plotting,save_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/")
1 %% 5
2 %% 5
3 %% 5
6 %% 5
is.integer(NULL)
is.integer(5)
is.numeric(NULL)
is.numeric(5)
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
diagnostic_plots(input_data_table = alldata_plotting,save_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/",slim_by = 25)
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
diagnostic_plots(input_data_table = alldata_plotting,save_path = "~/Desktop/junk/aDN_dark_behaviour/good_data/2020_10_08_Courtship/Annika-2020_10_08_Courtship-2020_10_08_aDN_dark/",slim_by = 25)
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/diagnostic_plots.R')
source('~/Documents/GitHub/goodwin-lab-tracking/R/Extact_and_Plot_Tracking_Data.R')
